// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-commons/tree/main/paramgen

package cassandra

import (
	"github.com/conduitio/conduit-commons/config"
)

const (
	DestinationConfigAuthBasicPassword = "auth.basic.password"
	DestinationConfigAuthBasicUsername = "auth.basic.username"
	DestinationConfigAuthMechanism     = "auth.mechanism"
	DestinationConfigKeyspace          = "keyspace"
	DestinationConfigNodes             = "nodes"
	DestinationConfigTable             = "table"
)

func (DestinationConfig) Parameters() map[string]config.Parameter {
	return map[string]config.Parameter{
		DestinationConfigAuthBasicPassword: {
			Default:     "",
			Description: "Password, only if basic auth is used.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		DestinationConfigAuthBasicUsername: {
			Default:     "",
			Description: "Username, only if basic auth is used.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		DestinationConfigAuthMechanism: {
			Default:     "none",
			Description: "Authentication mechanism used by Cassandra.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationInclusion{List: []string{"none", "basic"}},
			},
		},
		DestinationConfigKeyspace: {
			Default:     "",
			Description: "The keyspace name that has the table (similar to a database in a relational database system).",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		DestinationConfigNodes: {
			Default:     "",
			Description: "Comma separated list of Cassandra nodes' addresses (at least one), ex: 127.0.0.1:9042,127.0.0.2:8080",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		DestinationConfigTable: {
			Default:     "",
			Description: "The table name.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
	}
}
